diff --git a/one-one/final b/one-one/final
index dd3077a..842d96a 100755
Binary files a/one-one/final and b/one-one/final differ
diff --git a/one-one/mythread.c b/one-one/mythread.c
index 42c6015..4099db1 100644
--- a/one-one/mythread.c
+++ b/one-one/mythread.c
@@ -105,7 +105,7 @@ int initialiseThreadObject(thread* newthread, void*(*funptr)(void*), void* arg,
 }
 
 int mythread_create(thread_id* tid, void* thread_attr,void*(*funptr)(void*), void* arg){
-    static int is_first_thread = 1; //
+    static int is_first_thread = 1;
     
     lock_lock(&lock_for_init);
     if(is_first_thread){
@@ -141,13 +141,13 @@ int mythread_create(thread_id* tid, void* thread_attr,void*(*funptr)(void*), voi
 int mythread_join(thread_id tid, void** retval){
     if(tid <= 0)
        return 1;
-    lock_lock(&lock_var);//No need
+    lock_lock(&lock_var);
     thread* currentthread = getThreadFromTid(head, tid);
     lock_unlock(&lock_var);
     if(currentthread == NULL){
         return 1;
     }
-    while(currentthread && currentthread->tid == tid){
+    while(currentthread->tid == tid){
     }
     if(retval != NULL){
         (*retval) = currentthread->retval;
@@ -161,18 +161,15 @@ int mythread_kill(thread_id tid, int sig){
     if(tid <= 0)
         return 1;
 
-
     thread_id currid = gettid();
     if(sig == SIGINT || sig == SIGSTOP || sig == SIGCONT){
         lock_lock(&lock_var);
         killToAllThreads(&head, currid, sig);
-        lock_unlock(&lock_var);
-    }
-    if(sig == SIGINT){
-        lock_lock(&lock_var);
-        deleteFromLL(&head, currid);
         lock_unlock(&lock_var); 
     }
+    lock_lock(&lock_var);
+    deleteFromLL(&head, currid);
+    lock_unlock(&lock_var); 
     tgkill(getpid(), currid, sig);
     return 0;
 }
diff --git a/one-one/mythread.o b/one-one/mythread.o
index 1e23b26..0cbd5d5 100644
Binary files a/one-one/mythread.o and b/one-one/mythread.o differ
diff --git a/one-one/singlyLL.c b/one-one/singlyLL.c
index 17e0122..ec9103e 100644
--- a/one-one/singlyLL.c
+++ b/one-one/singlyLL.c
@@ -1,6 +1,5 @@
 #include "singlyLL.h"
 #include <stdlib.h>
-#include <signal.h>
 #include <sys/mman.h>
 
 void clearResources(thread* thr){
@@ -61,12 +60,12 @@ thread* getThreadFromTid(thread* head, thread_id tid){
     return NULL;
 }
 
+
 void killToAllThreads(thread** head, thread_id tid, int sig){
     thread* curr = (*head);
     while(curr){
         if(curr->tid != tid){
-            if(sig == SIGINT)
-               deleteFromLL(head, curr->tid);
+           deleteFromLL(head, curr->tid);
            tgkill(getpid(), curr->tid, sig);
         }
         curr = curr->next;
diff --git a/one-one/singlyLL.o b/one-one/singlyLL.o
index 0b286dc..2412f55 100644
Binary files a/one-one/singlyLL.o and b/one-one/singlyLL.o differ
diff --git a/one-one/test.c b/one-one/test.c
index 062840f..1e6acc0 100644
--- a/one-one/test.c
+++ b/one-one/test.c
@@ -17,19 +17,15 @@ void* fun1(void* arg){
     }
 }
 
-void* fun2(void* d){
-    printf("hello\n");
-}
-
 int main(){
     thread_id t1,t2,t3;
     int k = 10;
     int m = 9;
     // printf("hello\n");
-    mythread_create(&t1, NULL, fun2, NULL);
-    mythread_create(&t3, NULL, fun2, NULL);
-    // sleep(1);
-    mythread_create(&t2, NULL, fun2, &t1);
+    mythread_create(&t1, NULL, fun1, NULL);
+    mythread_create(&t3, NULL, fun1, NULL);
+    sleep(1);
+    mythread_create(&t2, NULL, fun1, &t1);
     // sleep(1);
     // mythread_create(&t2, NULL, fun1, &k);
     // mythread_create(&t3, NULL, fun1, &m);
diff --git a/one-one/test.o b/one-one/test.o
index 57e2870..25038b9 100644
Binary files a/one-one/test.o and b/one-one/test.o differ
